#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PTLCanTest
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Lamp")]
	public partial class LampDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertElabelOnPart(ElabelOnPart instance);
    partial void UpdateElabelOnPart(ElabelOnPart instance);
    partial void DeleteElabelOnPart(ElabelOnPart instance);
    #endregion
		
		public LampDataContext() : 
				base(global::PTLCanTest.Properties.Settings.Default.LampConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LampDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LampDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LampDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LampDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ElabelOnPart> ElabelOnPart
		{
			get
			{
				return this.GetTable<ElabelOnPart>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ElabelOnPart")]
	public partial class ElabelOnPart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LampId;
		
		private string _PartNr;
		
		private System.Nullable<int> _WorkstationId;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLampIdChanging(int value);
    partial void OnLampIdChanged();
    partial void OnPartNrChanging(string value);
    partial void OnPartNrChanged();
    partial void OnWorkstationIdChanging(System.Nullable<int> value);
    partial void OnWorkstationIdChanged();
    #endregion
		
		public ElabelOnPart()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LampId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LampId
		{
			get
			{
				return this._LampId;
			}
			set
			{
				if ((this._LampId != value))
				{
					this.OnLampIdChanging(value);
					this.SendPropertyChanging();
					this._LampId = value;
					this.SendPropertyChanged("LampId");
					this.OnLampIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartNr", DbType="VarChar(50)")]
		public string PartNr
		{
			get
			{
				return this._PartNr;
			}
			set
			{
				if ((this._PartNr != value))
				{
					this.OnPartNrChanging(value);
					this.SendPropertyChanging();
					this._PartNr = value;
					this.SendPropertyChanged("PartNr");
					this.OnPartNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkstationId", DbType="Int")]
		public System.Nullable<int> WorkstationId
		{
			get
			{
				return this._WorkstationId;
			}
			set
			{
				if ((this._WorkstationId != value))
				{
					this.OnWorkstationIdChanging(value);
					this.SendPropertyChanging();
					this._WorkstationId = value;
					this.SendPropertyChanged("WorkstationId");
					this.OnWorkstationIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
